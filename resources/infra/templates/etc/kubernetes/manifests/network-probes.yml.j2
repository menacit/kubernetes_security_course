---
# SPDX-FileCopyrightText: Â© 2025 Menacit AB <foss@menacit.se>
# SPDX-License-Identifier: CC-BY-SA-4.0
apiVersion: "v1"
kind: "Pod"
metadata:
  name: "network-probes"
  namespace: "kube-system"
spec:
  tolerations:
    - operator: "Exists"
  hostNetwork: true
  volumes:
    - name: "logs"
      emptyDir: {}
  initContainers:
    - name: "log-file-creator"
      image: "docker.io/library/busybox:1.36.1"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - name: "logs"
          mountPath: "/log"
      command:
        - "/bin/sh"
      args:
        - "-c"
        - "touch /log/probes && chmod 666 /log/probes"
  containers:
    - name: "logger"
      image: "docker.io/library/busybox:1.36.1"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - name: "logs"
          mountPath: "/log"
      command:
        - "/bin/tail"
      args:
        - "-f"
        - "/log/probes"
{% for node_prefix in range(1,3) %}
{% for number in range(1, 4) %}
    - name: "http-{{ node_prefix }}-{{ number }}"
      image: "quay.io/curl/curl:8.5.0"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - name: "logs"
          mountPath: "/log"
      command:
        - "/bin/sh"
      args:
        - "-c"
        - >-
          sleep 20;
          while true; do
          ENDPOINT=10.13.38.{{ node_prefix }}{{ number }};
          curl --connect-timeout 2 http://${ENDPOINT}:1080
          || echo "$(date): HTTP: ${ENDPOINT} from {{ inventory_hostname }}" >> /log/probes;
          sleep 1;
          done
    - name: "ping-{{ node_prefix }}-{{ number }}"
      image: "docker.io/library/busybox:1.36.1"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - name: "logs"
          mountPath: "/log"
      command:
        - "/bin/sh"
      args:
        - "-c"
        - >-
          sleep 20;
          while true; do
          ENDPOINT=10.13.38.{{ node_prefix }}{{ number }};
          ping -W 2 ${ENDPOINT}
          || echo "$(date): PING: ${ENDPOINT} from {{ inventory_hostname }}" >> /log/probes;
          sleep 1;
          done
{% endfor %}
{% endfor %}
status: {}
